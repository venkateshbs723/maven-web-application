pipeline
{

agent any

tools{
maven "maven3.8.5"
}

triggers {
  pollSCM ('* * * * *')
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '')
//adding the timestamps to the console output
  timestamps()
}


stages{

//Checkout Code stage
stage('CheckoutCode')
{
steps{
git branch: 'development', credentialsId: '56852f69-6a47-421e-8bbe-7275ec1b6a7f', url: 'https://github.com/venkateshbs723/maven-web-application.git'
}
}

//Build Stage
stage('Build')
{
steps{
sh "mvn clean package"
}
}

//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn sonar:sonar"
}
}

//Upload artifacts into Artifactory repo
stage('UploadIntoNexus')
{
steps{
sh "mvn deploy"
}
}

stage('DeployAppintoTomcatServer'){
steps{
sshagent(['d8884ca1-a9db-414b-ac4a-ea35a965271f']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.32.172:/opt/apache-tomcat-9.0.63/webapps" 
}
}
}


}//Stage closing


post {
  success {
      sendSlackNotifications('SUCCESS')
  }  
  failure {
      sendSlackNotifications('FAILURE')
  
  }
}


}//Pipeline closing

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}

